{"version":3,"file":"astro_slider.js","mappings":"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","sources":["webpack://widgets-library/./src/components/organisms/AstroSlider/AstroSlider.js"],"sourcesContent":["const styles = ` \r\n.tns-liveregion {display: none} \r\n\r\n.sunsign_wrapper {\r\n  background-color: #9f1969;\r\n  min-height: 300px;\r\n  padding: 12px;\r\n}\r\n.header {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.header h2 {\r\n  font: 700 28px/36px futura, sans-serif;\r\n  text-transform: uppercase;\r\n  color: #fff;\r\n}\r\n.header .froward_icon {\r\n  position: relative;\r\n}\r\n.header .froward_icon img {\r\n  width: 30px;\r\n  height: 30px;\r\n}\r\n.sunsigns_logo_wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20px 0;\r\n  overflow: auto;\r\n}\r\n.sunsigns_logo_wrapper span {\r\n  height: 40px;\r\n  width: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px;\r\n  border-bottom: 2px solid transparent;\r\n}\r\n.sunsigns_logo_wrapper span.active {\r\n  height: 60px;\r\n  border-bottom: 2px solid orange;\r\n}\r\n.sunsigns_logo_wrapper span.active img {\r\n  filter: invert(0.5) sepia(1) saturate(5) hue-rotate(10deg);\r\n}\r\n.sunsigns_logo_wrapper span:first-child {\r\n  padding-left: 0;\r\n}\r\n.symplor_hcards {display: flex;}\r\n.sunsign_name {\r\n  position: relative;\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 16px auto;\r\n}\r\n.sunsign_name h3 {\r\n  font: 600 24px/36px futura, sans-serif;\r\n  color: #fff;\r\n}\r\n.sunsign_name span {\r\n  font: 400 16px/24px futura, sans-serif;\r\n  color: #fff;\r\n}\r\n.tabs_wrapper {\r\n  margin: 16px 0;\r\n  \r\n}\r\n.tabs {\r\n  position: relative;\r\n  padding: 0;\r\n display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.tabs li {\r\n  border-radius: 60px;\r\n  border: 1px solid orange;\r\n  text-align: center;\r\n  padding: 0 8px;\r\n  margin: 0 4px;\r\n  list-style: none;\r\n  text-transform: capitalize;\r\n  color: #ffb54e; \r\n  text-decoration: none;\r\n  font: 400 12px/20px futura, sans-serif;\r\n}\r\n.tabs li.active {\r\n  background-color: #fdd60c;\r\n  color: #a7305c;\r\n}\r\n.desc {\r\n  margin: 16px 0;\r\n}\r\n.desc p {\r\n  font: 400 12px/20px futura, sans-serif;\r\n  color: #fff;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  max-width: 80%;\r\n  -webkit-line-clamp: 7;\r\n  -webkit-box-orient: vertical;\r\n  display: -webkit-box;\r\n  overflow: hidden;\r\n  height: 140px;\r\n}\r\n#tns1-ow.tns-outer {\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n#tns1-ow.tns-outer button {\r\n  top: 50%;\r\n  position: absolute;\r\n  transform: translateY(-50%);\r\n  text-indent: -9999px;\r\n  border-radius: 4px;\r\n  border: 1px solid #cb6b2c;\r\n  width: 32px;\r\n  height: 32px;\r\n  background: #ba5441;\r\n  z-index: 2;\r\n}\r\n.tns-ovh {\r\n  overflow: hidden;\r\n}\r\n#tns2-ow.tns-outer .tns-controls {\r\n  display: none;\r\n}\r\n#tns2 > .tns-item {\r\n  padding: 0 0 0 8px;\r\n}\r\n#tns1-ow.tns-outer button::after {\r\n  content: '';\r\n  position: absolute;\r\n  display: block;\r\n  width: 12px;\r\n  height: 12px;\r\n  border-top: 2px solid #fff;\r\n  border-left: 2px solid #fff;\r\n}\r\n#tns1-ow.tns-outer button[data-controls=\"next\"] {\r\n  right: 0;\r\n}\r\n#tns1-ow.tns-outer button[data-controls=\"prev\"]::after {\r\n  transform: rotate(-45deg);\r\n  left: 12px;\r\n  top: 9px;\r\n}\r\n#tns1-ow.tns-outer button[data-controls=\"next\"]::after {\r\n  transform: rotate(135deg);\r\n  left: 6px;\r\n  top: 9px;\r\n}\r\n#tns2 .tns-slide-active:nth-child(3) {\r\n  height: 60px;\r\n  border-bottom: 2px solid orange;\r\n}\r\n#tns2 .tns-slide-active:nth-child(3) img {\r\n  filter: invert(0.5) sepia(1) saturate(5) hue-rotate(10deg);\r\n}\r\n`\r\nlet sunSignCardSlider = null\r\nlet sunSignLogoSlider = null\r\nlet widgetData = null\r\nconst getURLSeparator = (url) => (url.includes('?') ? '&' : '?')\r\nlet selectedPeriod = 'daily'\r\nlet selectedHorosopeName = 'aries'\r\nconst getIntermediateURLWithTag = (url, intermediateURLConfig) => {\r\n  if (!url || typeof url !== 'string') {\r\n    return url\r\n  }\r\n  let finalURL = url\r\n  const { intermediateURL, tag } = intermediateURLConfig\r\n  if (tag) {\r\n    finalURL += getURLSeparator(url)\r\n    finalURL += `tag=${tag}`\r\n  }\r\n  if (intermediateURL) {\r\n    finalURL = `${intermediateURL}${getURLSeparator(\r\n      intermediateURL\r\n    )}url=${encodeURIComponent(finalURL)}`\r\n  }\r\n\r\n  return finalURL\r\n}\r\n\r\nconst getSunSignLogos = (data) => {\r\n  const { horoscopes = {} } = data\r\n  let sunsSignLogos = ''\r\n  let sunsignName, logourl\r\n  const allHoroScopesNames = Object.keys(horoscopes)\r\n  allHoroScopesNames.forEach((sunsign) => {\r\n    sunsignName = horoscopes[sunsign].hName.toLowerCase()\r\n    logourl = horoscopes[sunsign].hLogo\r\n    sunsSignLogos += `<span><img src=\"${logourl}\" alt=\"${sunsignName}\" /></span>`\r\n  })\r\n  return sunsSignLogos\r\n}\r\nconst getSunSignCards = (data) => {\r\n  const { horoscopes = {} } = data\r\n  let sunShineCards = ''\r\n  const allHoroScopesNames = Object.keys(horoscopes)\r\n  let horoscopeDetail\r\n  allHoroScopesNames.forEach((sunsign) => {\r\n    horoscopeDetail = horoscopes[sunsign]\r\n    sunShineCards += `<div class=\"sunsign_name\" data-hname=${horoscopeDetail.hName.toLowerCase()}>\r\n    <h3>${horoscopeDetail.hName}</h3>\r\n    <span>${horoscopeDetail.hDateRange}</span>\r\n  </div>`\r\n  })\r\n  return sunShineCards\r\n}\r\n\r\nconst gethoroscopeDetails = (data) => {\r\n  const { horoscopes = {} } = data\r\n  const periods = Object.keys(horoscopes[selectedHorosopeName].hDetails)\r\n  let tabHtml = ''\r\n  periods.forEach(\r\n    (period) =>\r\n      (tabHtml += `<li class=\"tab ${\r\n        period === 'daily' ? 'active' : ''\r\n      }\" data-period=${period}>${period}</li>`)\r\n  )\r\n  return `<div class=\"tabs_wrapper\">\r\n  <ul class=\"tabs\" data-periods=\"yes\">\r\n  ${tabHtml}        \r\n  </ul>\r\n</div>\r\n<div class=\"desc\" >\r\n  <p data-desc=\"astro\">${horoscopes[selectedHorosopeName]['hDetails'][selectedPeriod].description}</p>\r\n</div>\r\n`\r\n}\r\n\r\nconst getAstroWidget = ({ data, config }) => {\r\n  return `\r\n  <div class=\"sunsign_wrapper\">\r\n      <div class=\"header\">\r\n        <h2>Astro Widget</h2>\r\n        <a href=\"#\" class=\"froward_icon\"\r\n          ><image src=\"https://static.symplor.com/widgets/images/forward.svg\" alt=\"forward icon\"\r\n        /></a>\r\n      </div>\r\n      <div class=\"sunsigns_logo_wrapper\">\r\n        ${getSunSignLogos(data)}\r\n      </div>\r\n      <div class=\"symplor_hcards\">${getSunSignCards(data)}</div>\r\n      ${gethoroscopeDetails(data)}\r\n    </div>`\r\n}\r\n\r\nconst onSunSignCardSliderChange = (info, eventName) => {\r\n  console.log(\r\n    'rkd onSunSignCardSliderChange',\r\n    sunSignLogoSlider.getInfo().index,\r\n    info.index\r\n  )\r\n  let astroDescription\r\n  const sliderInfo = sunSignCardSlider.getInfo()\r\n  selectedHorosopeName =\r\n    sliderInfo.slideItems[sliderInfo.index].getAttribute('data-hname')\r\n  astroDescription =\r\n    widgetData.horoscopes[selectedHorosopeName]['hDetails'][selectedPeriod]\r\n      .description\r\n  document.querySelector('[data-desc=\"astro\"]').innerHTML = astroDescription\r\n  if (Math.abs(sunSignLogoSlider.getInfo().index - info.index) !== 6) {\r\n    sunSignLogoSlider.goTo(info.index - 1)\r\n  }\r\n\r\n  // upar wale ka slider chage\r\n  // text badalne ka hai\r\n}\r\n\r\nconst onSunSignLogoSlider = (info, eventName) => {\r\n  let logoSliderEl\r\n  let logoSliderActiveEl\r\n  console.log(\r\n    'rkd onSunSignLogoSlider',\r\n    sunSignCardSlider.getInfo().index,\r\n    info.index\r\n  )\r\n  logoSliderEl = document.querySelectorAll('.sunsigns_logo_wrapper .tns-item')\r\n  logoSliderEl.forEach((el) => el.classList.remove('active'))\r\n  logoSliderActiveEl = document.querySelectorAll('.sunsigns_logo_wrapper .tns-slide-active')[2]\r\n\r\n  logoSliderActiveEl.classList.add('active')\r\n  if (Math.abs(sunSignCardSlider.getInfo().index - info.index) !== 6) {\r\n    sunSignCardSlider.goTo(info.index - 1)\r\n  }\r\n}\r\n\r\nconst handleLazyImages = () => {\r\n  if ('IntersectionObserver' in window) {\r\n    inViewObserver = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entryToCheck) => {\r\n          if (\r\n            entryToCheck &&\r\n            (entryToCheck.isIntersecting || entryToCheck.intersectionRatio > 0)\r\n          ) {\r\n            inViewObserver.unobserve(entryToCheck.target)\r\n            entryToCheck.target.setAttribute(\r\n              'src',\r\n              entryToCheck.target.getAttribute('data-symplor-src')\r\n            )\r\n          }\r\n        })\r\n      },\r\n      { rootMargin: '100px 100px 100px 100px' }\r\n    )\r\n    document.querySelectorAll('img[data-symplor-src]').forEach((img) => {\r\n      inViewObserver.observe(img)\r\n    })\r\n  }\r\n}\r\n\r\nfunction sendGA(eventData = {}) {\r\n  var name = eventData.name\r\n  var params = eventData.params || {}\r\n  if (typeof window !== undefined && typeof window.gtag === 'function') {\r\n    window.gtag('event', name, {\r\n      ...params,\r\n      pp_url: window.top?.location?.href,\r\n    })\r\n  }\r\n}\r\n\r\nconst bindGA = () => {\r\n  productListEl.addEventListener('click', (event) => {\r\n    const cardEl = event.target.closest('.js-card')\r\n    if (cardEl) {\r\n      try {\r\n        sendGA({\r\n          name: 'amazon_click',\r\n          params: {\r\n            action: 'Product_List_MREC',\r\n            amazon_url: cardEl.querySelector('a').getAttribute('href'),\r\n          },\r\n        })\r\n      } catch (err) {\r\n        console.log('Symplor: error during ga call')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nconst enableSlider = (el) => {\r\n  if (sliderJSPromise) {\r\n    sliderJSPromise\r\n      .then(() => {\r\n        sunSignCardSlider = tns({\r\n          container: el.querySelector('.symplor_hcards'),\r\n          items: 1,\r\n          slideBy: 'page',\r\n          autoplay: false,\r\n          gutter: 0,\r\n          arrowKeys: true,\r\n          autoplayHoverPause: true,\r\n          autoplayButtonOutput: false,\r\n          nav: false,\r\n        })\r\n        sunSignLogoSlider = tns({\r\n          container: el.querySelector('.sunsigns_logo_wrapper'),\r\n          items: 5,\r\n          slideBy: 1,\r\n          autoplay: false,\r\n          gutter: 8,\r\n          arrowKeys: true,\r\n          autoplayHoverPause: true,\r\n          autoplayButtonOutput: false,\r\n          nav: false,\r\n          center: true,\r\n        })\r\n        sunSignCardSlider.events.on('indexChanged', onSunSignCardSliderChange)\r\n        sunSignLogoSlider.events.on('indexChanged', onSunSignLogoSlider)\r\n      })\r\n      .catch((err) => {\r\n        console.log('Symplor Widgets :: failed to load slider script :: ' + err)\r\n      })\r\n  } else {\r\n    console.log('Symplor Widgets :: failed to load slider script')\r\n  }\r\n}\r\n\r\nconst onPeriodTabsClick = (event) => {\r\n  let sliderInfo\r\n  let astroDescription\r\n  let horoscopeObj\r\n  let periodSelectorEl\r\n  selectedPeriod = event.target.getAttribute('data-period')\r\n  if (selectedPeriod) {\r\n    sliderInfo = sunSignCardSlider.getInfo()\r\n    selectedHorosopeName =\r\n      sliderInfo.slideItems[sliderInfo.index].getAttribute('data-hname')\r\n\r\n    console.log(selectedPeriod, selectedHorosopeName) // weekly .daily\r\n    horoscopeObj = widgetData.horoscopes[selectedHorosopeName]\r\n    astroDescription = horoscopeObj['hDetails'][selectedPeriod].description\r\n    document.querySelector('[data-desc=\"astro\"]').innerHTML = astroDescription\r\n    periodSelectorEl = document.querySelector(\"[data-periods='yes']\")\r\n    periodSelectorEl.querySelector('.active').removeAttribute('class')\r\n    periodSelectorEl\r\n      .querySelector(`[data-period=\"${selectedPeriod}\"]`)\r\n      .setAttribute('class', 'active')\r\n    // st active\r\n  }\r\n}\r\n\r\nconst didMount = (el, props) => {\r\n  // bindGA(el);\r\n  widgetData = props.data\r\n  handleLazyImages()\r\n  if (props?.config?.layout === 'slider') {\r\n    enableSlider(el)\r\n  }\r\n  window.addEventListener('resize', () => {\r\n    if (sunSignCardSlider && sunSignLogoSlider) {\r\n      sunSignCardSlider.rebuild()\r\n      sunSignLogoSlider.rebuild()\r\n    }\r\n  })\r\n  const periodSelectorEl = document.querySelector(\"[data-periods='yes']\")\r\n  periodSelectorEl.addEventListener('click', onPeriodTabsClick)\r\n}\r\n\r\nlet sliderJSPromise = null\r\n\r\nconst loadSliderJS = () => {\r\n  const scriptEL = document.createElement('script')\r\n  const scriptSrc =\r\n    'https://cdnjs.cloudflare.com/ajax/libs/tiny-slider/2.9.2/min/tiny-slider.js'\r\n  scriptEL.src = scriptSrc\r\n  scriptEL.id = scriptSrc\r\n\r\n  sliderJSPromise = new Promise((resolve, reject) => {\r\n    scriptEL.addEventListener('load', () => {\r\n      setTimeout(() => {\r\n        resolve()\r\n      })\r\n    })\r\n    scriptEL.addEventListener('error', (e) => {\r\n      reject(e)\r\n    })\r\n  })\r\n\r\n  document.head.appendChild(scriptEL)\r\n}\r\n\r\nconst AstroSlider = (props) => {\r\n  if (props?.config?.layout === 'slider') {\r\n    loadSliderJS()\r\n  }\r\n\r\n  return {\r\n    styles,\r\n    html: getAstroWidget(props),\r\n    onLoad: (el) => {\r\n      didMount(el, props)\r\n    },\r\n  }\r\n}\r\n\r\nwindow.symplor = window.symplor || { components: {}, helpers: {} }\r\nwindow.symplor.components.astro_slider = AstroSlider\r\n"],"names":["sunSignCardSlider","sunSignLogoSlider","widgetData","selectedPeriod","selectedHorosopeName","getAstroWidget","data","config","horoscopes","sunsignName","logourl","sunsSignLogos","Object","keys","forEach","sunsign","hName","toLowerCase","hLogo","getSunSignLogos","horoscopeDetail","sunShineCards","hDateRange","getSunSignCards","periods","hDetails","tabHtml","period","description","gethoroscopeDetails","onSunSignCardSliderChange","info","eventName","astroDescription","console","log","getInfo","index","sliderInfo","slideItems","getAttribute","document","querySelector","innerHTML","Math","abs","goTo","onSunSignLogoSlider","logoSliderEl","logoSliderActiveEl","querySelectorAll","el","classList","remove","add","onPeriodTabsClick","event","horoscopeObj","periodSelectorEl","target","removeAttribute","setAttribute","sliderJSPromise","window","symplor","components","helpers","astro_slider","props","layout","scriptEL","createElement","scriptSrc","src","id","Promise","resolve","reject","addEventListener","setTimeout","e","head","appendChild","loadSliderJS","styles","html","onLoad","inViewObserver","IntersectionObserver","entries","entryToCheck","isIntersecting","intersectionRatio","unobserve","rootMargin","img","observe","then","tns","container","items","slideBy","autoplay","gutter","arrowKeys","autoplayHoverPause","autoplayButtonOutput","nav","center","events","on","catch","err","enableSlider","rebuild","didMount"],"sourceRoot":""}