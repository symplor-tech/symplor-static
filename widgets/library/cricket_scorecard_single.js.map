{"version":3,"file":"cricket_scorecard_single.js","mappings":"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","sources":["webpack://widgets-library/./src/components/organisms/CricketScoreCardSingle/CricketScoreCardSingle.js","webpack://widgets-library/./src/components/organisms/CricketScoreCardSingle/CricketScoreCardSingle.styles.js"],"sourcesContent":["import styles from './CricketScoreCardSingle.styles'\r\nimport vs_svg from './vs_svg'\r\nimport symplor_svg from './symplor_svg'\r\n\r\nconst getRunRate = (teamData) => {\r\n  let runRateStr = ''\r\n  let overs = teamData.overs\r\n  if (overs.indexOf('.') > -1) {\r\n    const overParts = overs.split('.')\r\n    overs = (Number(overParts[0]) * 6 + Number(overParts[1])) / 6\r\n  }\r\n  try {\r\n    runRateStr = `RR. ${(\r\n      Number(teamData.scores.split('/')[0]) / Number(overs)\r\n    ).toFixed(2)}`\r\n  } catch (e) {\r\n    console.log(`Symplor Error :: ${e.message}`)\r\n  }\r\n  return runRateStr\r\n}\r\n\r\nlet IsScoreCardInView = false\r\n\r\nconst getWidgetHTML = ({ data = {}, config = {} }) => {\r\n  const { ad } = config\r\n  const { venue = {} } = data\r\n  const showRunRate = !(\r\n    data?.format_str.toLowerCase() === 'first class' ||\r\n    data?.format_str.toLowerCase() === 'test'\r\n  )\r\n  const result =\r\n    data.status_note || data.equation || data.result || data.toss?.text\r\n  const matchTime =\r\n    data.status_str.toLowerCase() === 'scheduled' ? data.displayDateTime : ''\r\n  const status =\r\n    data.status_str.toLowerCase() === 'scheduled' ? 'Upcoming' : data.status_str\r\n  return `\r\n  <div id=\"symplor_cricket_scorecard\"> \r\n    <div class=\"symplor_card\">\r\n      <div class=\"symplor_team_info\">\r\n        <div class=\"symplor_info\">\r\n          <span>${data.title} (${data.format_str}) ${data.subtitle}</span>\r\n        </div>\r\n        <div class=\"symplor_status symplor_${data.status_str.toLowerCase()}\">${\r\n    data.status_str.toLowerCase() === 'live'\r\n      ? '<span class=\"blink\"></span>'\r\n      : ''\r\n  }${status}</div>\r\n      </div>\r\n      <div class=\"symplor_country_match_info\">\r\n        <div class=\"symplor_summary\">\r\n          <span class=\"symplor_first_team\">\r\n            ${data.teama.short_name}\r\n            <span class=\"symplor_flag\">\r\n              <img src=\"${data.teama.logo_url}\" />\r\n            </span>\r\n          </span>\r\n          ${\r\n            data.teama.scores && data.teama.overs\r\n              ? `<span class=\"symplor_batting_info\">${data.teama.scores}</span>\r\n              <span class=\"symplor_balling_info\">${\r\n                data.teama.overs\r\n              } OV &nbsp; ${showRunRate && getRunRate(data.teama)}</span>`\r\n              : ''\r\n          }\r\n        </div>\r\n        <div class=\"symplor_vs\">${vs_svg}</div>\r\n        <div class=\"symplor_summary\">\r\n          <span class=\"symplor_first_team\">\r\n            <span class=\"symplor_flag\">\r\n              <img src=\"${data.teamb.logo_url}\" />\r\n            </span>\r\n            ${data.teamb.short_name}\r\n          </span>\r\n          ${\r\n            data.teamb.overs && data.teamb.scores\r\n              ? `<span class=\"symplor_batting_info\">${data.teamb.scores}</span>\r\n              <span class=\"symplor_balling_info\">${\r\n                data.teamb.overs\r\n              } OV &nbsp; ${showRunRate && getRunRate(data.teamb)}</span>`\r\n              : ''\r\n          }\r\n        </div>\r\n      </div>\r\n      <div class=\"symplor_toss_info\">\r\n      ${\r\n        data.status_str.toLowerCase() === 'scheduled'\r\n          ? `<span class=\"symplor_info\">${matchTime}</span>\r\n            <span class=\"symplor_info\">Venue: ${venue.location} | ${venue.country}</span>`\r\n          : `<span class=\"symplor_info\">${result}</span>`\r\n      }\r\n      </div>\r\n    </div>\r\n    <div class=\"brand_text\">Powered by \r\n      <span class=\"symplor_logo\">\r\n        ${symplor_svg}\r\n      </span>\r\n    </div>\r\n  </div>`\r\n}\r\n\r\nlet stickyAdHandled = false\r\nlet adEl\r\nconst handleStickyAd = (win) => {\r\n  let stickyTime = 0\r\n  let stickyInterval\r\n  let adFrameParentEl\r\n  let adHeightObserved = false\r\n  const stickyHandler = (e) => {\r\n    adFrameParentEl = adFrameParentEl || adEl.querySelector('div')\r\n    if (adFrameParentEl) {\r\n      const adElRect = adEl.getBoundingClientRect()\r\n      if (adFrameParentEl.scrollHeight > 0) {\r\n        adEl.style.height = `${adFrameParentEl.scrollHeight}px`\r\n      }\r\n      if (stickyTime > 5000 || adFrameParentEl.scrollHeight > 90) {\r\n        adFrameParentEl.classList.remove('symplor_sticky')\r\n        adEl.style.height = ''\r\n        win.removeEventListener('scroll', stickyHandler)\r\n        if (stickyInterval) {\r\n          clearInterval(stickyInterval)\r\n          stickyInterval = undefined\r\n        }\r\n      } else {\r\n        // const adDistanceFromTop = adEl.offsetTop - win.scrollY\r\n        if (adElRect.top <= 0) {\r\n          adFrameParentEl.classList.add('symplor_sticky')\r\n          if (!stickyInterval) {\r\n            stickyInterval = setInterval(() => {\r\n              if (stickyTime > 5000 && stickyInterval) {\r\n                clearInterval(stickyInterval)\r\n                stickyInterval = undefined\r\n                adFrameParentEl.classList.remove('symplor_sticky')\r\n                adEl.style.height = ''\r\n              } else {\r\n                stickyTime += 100\r\n              }\r\n            }, 100)\r\n          }\r\n        } else {\r\n          adFrameParentEl.classList.remove('symplor_sticky')\r\n          adEl.style.height = ''\r\n          if (stickyInterval) {\r\n            clearInterval(stickyInterval)\r\n            stickyInterval = undefined\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  win.addEventListener('scroll', stickyHandler)\r\n}\r\n\r\nconst applyInViewObserver = (el, win, props) => {\r\n  const observer = new IntersectionObserver((entries) => {\r\n    entries.forEach((entry) => {\r\n      if (entry.intersectionRatio > 0 && entry.intersectionRatio <= 1) {\r\n        IsScoreCardInView = true\r\n        if (!stickyAdHandled && !props?.config?.ad?.skipSticky) {\r\n          handleStickyAd(win)\r\n          stickyAdHandled = true\r\n        }\r\n      } else {\r\n        IsScoreCardInView = false\r\n      }\r\n    })\r\n  })\r\n  observer.observe(el)\r\n}\r\n\r\nconst didMount = (widgetEl, dataURL, props) => {\r\n  const scorecardEl = document.getElementById('symplor_widget')\r\n  setInterval(() => {\r\n    if (IsScoreCardInView) {\r\n      fetch(dataURL)\r\n        .then((res) => res.json())\r\n        .then((props) => {\r\n          scorecardEl.innerHTML = getWidgetHTML(props)\r\n          window.gtag('event', 'library', {\r\n            action: 'cricket_scorecard',\r\n            label: 'score_updated',\r\n            pp_url: window.top?.location?.href,\r\n          })\r\n        })\r\n    }\r\n  }, 60 * 1000)\r\n\r\n  let win = window\r\n  if (props.symplorSkipIframe !== 'yes') {\r\n    win = window?.top\r\n    applyInViewObserver(widgetEl, win, props)\r\n  } else {\r\n    window.parent.postMessage(\r\n      {\r\n        sentinel: 'amp',\r\n        type: 'send-intersections',\r\n      },\r\n      '*'\r\n    )\r\n\r\n    function isAmpMessage(event, type) {\r\n      return (\r\n        event.source == window.parent &&\r\n        event.origin != window.location.origin &&\r\n        event.data &&\r\n        event.data.sentinel == 'amp' &&\r\n        event.data.type == type\r\n      )\r\n    }\r\n    window.addEventListener('message', function (event) {\r\n      if (!isAmpMessage(event, 'intersection')) {\r\n        return\r\n      }\r\n      event.data.changes.forEach(function (change) {\r\n        if (change.intersectionRatio > 0.5) {\r\n          IsScoreCardInView = true\r\n        } else {\r\n          IsScoreCardInView = false\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  const styleEl = win.document?.createElement('style')\r\n  styleEl.innerHTML = `.symplor_sticky {position: fixed; top: 0;width: 100%; background: #f5f5f5; left: 50%; transform: translateX(-50%); z-index: 999999;}`\r\n  widgetEl.parentNode.insertAdjacentElement('beforebegin', styleEl)\r\n\r\n  const { ad = {} } = props.config || {}\r\n  adEl = win.document?.createElement('div')\r\n  adEl.setAttribute('id', 'div-gpt-ad-cricket_widget')\r\n  // adEl.setAttribute('data-adslot', ad.slot)\r\n  // adEl.setAttribute('data-size-desktop', ad.sizes.desktop)\r\n  // adEl.setAttribute('data-size-mobile', ad.sizes.mobile)\r\n  // adEl.setAttribute('data-ad-refresh', ad.refresh)\r\n  adEl.style = 'text-align:center; margin: 20px 0;'\r\n  adEl.classList.add('symplor_sponsored')\r\n  widgetEl.parentNode.insertAdjacentElement('beforebegin', adEl)\r\n\r\n  // if (props?.config?.scripts?.skipAdsScript) {\r\n  //   typeof win.displayAds === 'function' && win.displayAds()\r\n  // } else {\r\n  //   const adScriptEl = win.document?.createElement('script')\r\n  //   adScriptEl.src = 'https://cdn.rediads.com/republicworld/tags/ads.js'\r\n  //   widgetEl.parentNode.insertAdjacentElement('beforebegin', adScriptEl)\r\n  // }\r\n\r\n  if (!win.googletag) {\r\n    const adScriptEl = win.document?.createElement('script')\r\n    adScriptEl.src = 'https://securepubads.g.doubleclick.net/tag/js/gpt.js'\r\n    widgetEl.parentNode.insertAdjacentElement('beforebegin', adScriptEl)\r\n  }\r\n  const adScriptEl1 = win.document?.createElement('script')\r\n  adScriptEl1.innerHTML = `(window.googletag = window.googletag || { cmd: [] }),\r\n  googletag.cmd.push(function () {\r\n    var i = \"refresh\",\r\n      t = \"true\";\r\n      \r\n    var x = googletag.defineSlot(\r\n        \"${ad.slot}\",\r\n         ${adEl.getBoundingClientRect().width} < 728 ? ${ad.sizes.mobile} : ${\r\n    ad.sizes.desktop\r\n  },\r\n        \"div-gpt-ad-cricket_widget\"\r\n      ).setTargeting(i, t).addService(googletag.pubads());\r\n    \r\n      googletag.pubads().addEventListener(\"impressionViewable\", function (e) {\r\n        var g = e.slot;\r\n        g.getTargeting(i).indexOf(t) > -1 &&\r\n          setTimeout(function () {\r\n            googletag.pubads().refresh([g]);\r\n          }, 4e4);\r\n      });\r\n      googletag.enableServices();\r\n      googletag.display(\"div-gpt-ad-cricket_widget\")\r\n      googletag.pubads().isInitialLoadDisabled() ? googletag.pubads().refresh([x]) : ''\r\n    });\r\n\r\n`\r\n  widgetEl.parentNode.insertAdjacentElement('beforebegin', adScriptEl1)\r\n\r\n  window.gtag('event', 'library', {\r\n    action: 'cricket_scorecard',\r\n    label: 'on_load',\r\n    pp_url: win.location?.href,\r\n  })\r\n  return\r\n}\r\n\r\nconst CricketScoreCardSingle = (props) => {\r\n  return {\r\n    styles,\r\n    html: getWidgetHTML(props),\r\n    onLoad: (widgetEl, dataURL) => {\r\n      didMount(widgetEl, dataURL, props)\r\n    },\r\n  }\r\n}\r\n\r\nwindow.symplor = window.symplor || { components: {}, helpers: {} }\r\nwindow.symplor.components.cricket_scorecard_single = CricketScoreCardSingle\r\n","export default `\r\n  body {\r\n    margin: 0;\r\n  }\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: border-box;\r\n  }\r\n  #symplor_cricket_scorecard {\r\n    max-width: 728px;\r\n    margin: 0 auto;\r\n    overflow: hidden;\r\n  }\r\n  .symplor_card {\r\n    background: #fff;\r\n    border: 1px solid lightgray;\r\n    border-radius: 8px;\r\n    padding: 8px;\r\n  }\r\n\r\n  .symplor_team_info {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .symplor_team_info .symplor_info {\r\n    font: 500 12px/18px sans-serif;\r\n  }\r\n\r\n  .symplor_team_info .symplor_status {\r\n    border-radius: 4px;\r\n    background: rgba(228, 66, 66, 1);\r\n    color: rgb(255, 255, 255);\r\n    padding: 1px 8px;\r\n    flex: 0 0 78px;\r\n    margin-left: 12px;\r\n    max-height: 20px;\r\n    text-align: center;\r\n    font: 600 12px/18px sans-serif;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .symplor_status.symplor_scheduled {\r\n    background: rgba(59,67,124,1);\r\n  }\r\n  .symplor_status.symplor_live {\r\n    background: rgba(221, 52, 57, 1);\r\n  }\r\n  .symplor_status .blink {\r\n    display: inline-block;\r\n    width: 8px;\r\n    height: 8px;\r\n    border-radius: 50%;\r\n    margin: 0 5px;\r\n    position: relative;\r\n    background-color: white;\r\n    z-index: 9;\r\n    left: -3px;\r\n  }\r\n  .symplor_status .blink::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: inherit;\r\n    border-radius: 50%;\r\n    z-index: -1;\r\n    left: 0;\r\n    animation: ripple 1.5s ease-out infinite;\r\n  }\r\n  \r\n  \r\n  \r\n  .symplor_status .blink:first-child::before {\r\n    animation-delay: 0.2s;\r\n  }\r\n  .symplor_status.symplor_completed {\r\n    background: rgba(50,177,97,1);\r\n  }\r\n  .symplor_status.symplor_abandoned {\r\n    background: rgba(175,175,175,1);\r\n  }\r\n\r\n  .symplor_country_match_info {\r\n    position: relative;\r\n    margin: 8px 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding-bottom: 10px;\r\n    border-bottom: 1px solid #ccc;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .symplor_country_match_info .symplor_summary {\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    flex-flow: column;\r\n    flex: 0 0 calc(50% - 16px);\r\n  }\r\n  .symplor_country_match_info .symplor_summary:not(:last-child) {\r\n    align-items: flex-start;\r\n  }\r\n  .symplor_country_match_info .symplor_vs {\r\n    text-align: center;\r\n    flex: 0 0 32px;\r\n  }\r\n  .symplor_country_match_info .symplor_vs svg {\r\n    transform: scale(1.8);\r\n  }\r\n  .symplor_country_match_info .symplor_first_team {\r\n    display: flex;\r\n    align-items: center;\r\n    font: 700 18px/24px sans-serif;\r\n    flex: 50%;\r\n    margin-bottom: 4px;\r\n  }\r\n  .symplor_country_match_info .symplor_first_team .symplor_flag {\r\n    width: 20px;\r\n    height: 20px;\r\n    margin: 0 8px;\r\n  }\r\n  .symplor_country_match_info .symplor_first_team .symplor_flag img {\r\n    max-width: 100%;\r\n    height: auto;\r\n  }\r\n  .symplor_country_match_info .symplor_summary .symplor_balling_info {\r\n    font: 500 12px/14px sans-serif;\r\n  }\r\n  .symplor_country_match_info .symplor_summary .symplor_batting_info {\r\n    font: 700 16px/24px sans-serif;\r\n  }\r\n\r\n  .symplor_toss_info {\r\n    font: 600 12px/16px sans-serif;\r\n    display: flex;\r\n    flex-flow: column;\r\n  }\r\n\r\n  #symplor_cricket_scorecard .brand_text {\r\n    color: rgba(175,175,175,0.8);\r\n    font: 500 10px/16px sans-serif;\r\n    text-align: right;\r\n    margin-top: 6px;\r\n    margin-bottom: 12px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    position: relative;\r\n  }\r\n  #symplor_cricket_scorecard .brand_text .symplor_logo{\r\n    max-width: 100px;\r\n    margin-left: 4px;\r\n    position: relative;\r\n  }\r\n\r\n  #symplor_cricket_scorecard .brand_text .symplor_logo svg{\r\n    width: 80px;\r\n    height: 16px;\r\n  }\r\n\r\n  @keyframes ripple {\r\n    from {\r\n      opacity: 1;\r\n      transform: scale(0);\r\n    }\r\n    to {\r\n      opacity: 0;\r\n      transform: scale(3);\r\n    }\r\n  }\r\n  \r\n`\r\n"],"names":["getRunRate","teamData","runRateStr","overs","indexOf","overParts","split","Number","scores","toFixed","e","console","log","message","IsScoreCardInView","getWidgetHTML","data","config","ad","venue","showRunRate","format_str","toLowerCase","result","status_note","equation","toss","text","matchTime","status_str","displayDateTime","status","title","subtitle","teama","short_name","logo_url","teamb","location","country","adEl","stickyAdHandled","window","symplor","components","helpers","cricket_scorecard_single","props","styles","html","onLoad","widgetEl","dataURL","scorecardEl","document","getElementById","setInterval","fetch","then","res","json","innerHTML","gtag","action","label","pp_url","top","href","win","symplorSkipIframe","el","IntersectionObserver","entries","forEach","entry","intersectionRatio","skipSticky","stickyInterval","adFrameParentEl","stickyTime","stickyHandler","querySelector","adElRect","getBoundingClientRect","scrollHeight","style","height","classList","remove","removeEventListener","clearInterval","undefined","add","addEventListener","handleStickyAd","observe","applyInViewObserver","isAmpMessage","event","type","source","parent","origin","sentinel","postMessage","changes","change","styleEl","createElement","parentNode","insertAdjacentElement","setAttribute","googletag","adScriptEl","src","adScriptEl1","slot","width","sizes","mobile","desktop","didMount"],"sourceRoot":""}